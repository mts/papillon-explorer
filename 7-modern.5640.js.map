{"version":3,"sources":["webpack:///./src/graphql/query.js","webpack:///./src/pattern/template/ButtonsTemplate/ButtonsTemplate.props.js","webpack:///./src/pattern/template/ButtonsTemplate/ButtonsTemplate.jsx","webpack:///./src/pattern/page/ButtonsPage/ButtonsPage.jsx"],"names":["PAGES","gql","propTypes","page","object","isRequired","ButtonsTemplate","name","role","aria-label","to","startPagePath","ButtonsPage","data","useQuery","pages","find","id"],"mappings":";sUAEO,MAAMA,E,MAAQC,GAAH,M,mFCAX,MAAMC,EAAY,CACvBC,K,MAAMC,OAAOC,Y,YCER,MAAMC,EAAmB,IAAD,IAAC,KAAEH,GAAH,SAC7B,6BACE,4BAAKA,EAAKI,MACV,kDACqB,IACnB,0BAAMC,KAAK,MAAMC,aAAW,SAA5B,MAGA,kBAAC,IAAD,CAAMC,GAAIC,KAAV,yBAKNL,EAAgBJ,UAAYA,EClB5B,4CAKO,MAAMU,EAAc,KAAM,MAC/B,MAAM,KAAEC,GAASC,YAASd,KAE1B,OAAIa,aAAJ,YAAIA,EAAME,aAAV,aAAI,EAAaA,OACR,kBAACT,EAAD,CAAiBH,KAAMU,EAAKE,MAAMA,MAAMC,KAAKb,GAAoB,YAAZA,EAAKc,MAG5D,MAGML","file":"7-modern.5640.js","sourcesContent":["import gql from 'graphql-tag'\n\nexport const PAGES = gql`\n  query GetPages {\n    pages(pageSize: 10) {\n      pages {\n        id\n        name\n      }\n    }\n  }\n`\n","import { object } from 'prop-types'\n\nexport const propTypes = {\n  page: object.isRequired,\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { propTypes } from './ButtonsTemplate.props'\nimport { startPagePath } from '../../../route/path'\n\nexport const ButtonsTemplate = ({ page }) => (\n  <div>\n    <h2>{page.name}</h2>\n    <div>\n      Under construction{' '}\n      <span role=\"img\" aria-label=\"emoji\">\n        ðŸ™‚\n      </span>\n      <Link to={startPagePath}> Back to Home Page</Link>\n    </div>\n  </div>\n)\n\nButtonsTemplate.propTypes = propTypes\n","import React from 'react'\nimport { useQuery } from '@apollo/react-hooks'\nimport { PAGES } from '../../../graphql/query'\nimport { ButtonsTemplate } from '../../template/ButtonsTemplate'\n\nexport const ButtonsPage = () => {\n  const { data } = useQuery(PAGES)\n\n  if (data?.pages?.pages) {\n    return <ButtonsTemplate page={data.pages.pages.find(page => page.id === 'buttons')} />\n  }\n\n  return null\n}\n\nexport default ButtonsPage\n"],"sourceRoot":""}